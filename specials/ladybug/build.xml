<project default="restart-ladybug" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<target name="restart-ladybug">
		<property file="../../build.properties"/>
		<property file="build.properties"/>
		<property name="maven.skip.all" value="false"/>
		<property name="maven.skip.clean" value="${maven.skip.all}"/>
		<property name="maven.skip.tests" value="${maven.skip.all}"/>
		<property name="maven.skip.javadoc" value="${maven.skip.all}"/>
		<property name="maven.skip.recompile.all" value="${maven.skip.all}"/>
		<property name="maven.skip.source.jar" value="${maven.skip.all}"/>
		<property name="maven.skip.copyright" value="${maven.skip.all}"/>
		<property name="tomcat.skip.waitfor" value="false"/>
		<property name="maven.verbose" value="false"/>
		<property name="test.with" value="ladybug-test-webapp"/>
		<condition property="test.with.test.webapp"><equals arg1="${test.with}" arg2="ladybug-test-webapp"/></condition>
		<condition property="test.with.ff.test.webapp"><equals arg1="${test.with}" arg2="ladybug-ff-test-webapp"/></condition>
		<condition property="test.with.iaf"><equals arg1="${test.with}" arg2="iaf-webapp"/></condition>
		<property name="iaf.module" value="webapp"/>

		<echo message="ladybug: Check ladybug present"/>
		<condition property="ladybug.not.present"><not><resourceexists><file file="../../../ladybug"/></resourceexists></not></condition>
		<fail message="Folder ladybug not found, please clone https://github.com/wearefrank/ladybug.git" if:set="ladybug.not.present"/>

		<echo message="ladybug: Check ladybug-test-webapp present"/>
		<condition property="ladybug-test-webapp.not.present" if:true="${test.with.test.webapp}"><not><resourceexists><file file="../../../ladybug-test-webapp"/></resourceexists></not></condition>
		<fail message="Folder ladybug-test-webapp not found, please clone https://github.com/wearefrank/ladybug-test-webapp.git" if:true="${ladybug-test-webapp.not.present}"/>

		<echo message="ladybug: Check ladybug-ff-test-webapp present"/>
		<condition property="ladybug-ff-test-webapp.not.present" if:true="${test.with.ff.test.webapp}"><not><resourceexists><file file="../../../ladybug-ff-test-webapp"/></resourceexists></not></condition>
		<fail message="Folder ladybug-ff-test-webapp not found, please clone https://github.com/wearefrank/ladybug-ff-test-webapp.git" if:true="${ladybug-ff-test-webapp.not.present}"/>

		<echo message="ladybug: Check iaf present"/>
		<condition property="iaf.not.present" if:true="${test.with.iaf}"><not><resourceexists><file file="../../../frankframework"/></resourceexists></not></condition>
		<fail message="Folder frankframework not found, please clone https://github.com/frankframework/frankframework.git" if:set="iaf.not.present"/>

		<echo message="ladybug: Check ladybug version in pom.xml"/>
		<xmlproperty file="../../../ladybug/pom.xml" prefix="ladybug.pom.xml"/>
		<property name="pom.xml" location="${basedir}/../../../ladybug-test-webapp/pom.xml" if:true="${test.with.test.webapp}"/>
		<property name="pom.xml" location="${basedir}/../../../frankframework/ladybug/pom.xml" if:true="${test.with.iaf}"/>
		<condition property="ladybug.version.not.ok">
			<and>
				<or>
					<isset property="test.with.test.webapp"/>
					<isset property="test.with.iaf"/>
				</or>
				<not>
					<or>
						<resourcecontains resource="${pom.xml}" substring="&lt;ladybug.version&gt;${ladybug.pom.xml.project.properties.revision}&lt;/ladybug.version&gt;"/>
						<resourcecontains resource="${pom.xml}" substring="&lt;ladybug.version&gt;${ladybug.pom.xml.project.version}&lt;/ladybug.version&gt;"/>
					</or>
				</not>
			</and>
		</condition>
		<fail message="Check ladybug version failed:&#10;&#10;MANUAL ACTION REQUIRED: Set version of artifact ladybug to ${ladybug.pom.xml.project.properties.revision} in ${pom.xml} " if:true="${ladybug.version.not.ok}"/>

		<echo message="ladybug: Check property maven.projects" if:true="${test.with.iaf}"/>
		<property name="iaf.module.build.properties" location="${basedir}/../iaf-${iaf.module}/build.properties" if:true="${test.with.iaf}"/>
		<property file="${iaf.module.build.properties}" prefix="iaf.module.build.properties"/>
		<condition property="maven.projects.not.ok" if:true="${test.with.iaf}">
			<not>
				<or>
					<not><resourceexists><file file="${iaf.module.build.properties}"/></resourceexists></not>
					<not><isset property="iaf.module.build.properties.maven.projects"/></not>
					<equals arg1="${iaf.module.build.properties.maven.projects}" arg2=""/>
					<and>
						<contains string="${iaf.module.build.properties.maven.projects}" substring="ladybug"/>
						<or>
							<contains string="${iaf.module.build.properties.maven.projects}" substring="webapp"/>
							<equals arg1="${iaf.module}" arg2="webapp"/>
						</or>
					</and>
				</or>
			</not>
		</condition>
		<fail message="Check property maven.projects failed:&#10;&#10;MANUAL ACTION REQUIRED: Property maven.projects in ${iaf.module.build.properties} must be empty or contain ladybug and when iaf.module != webapp it must also contain webapp (currently maven.projects=${iaf.module.build.properties.maven.projects} and iaf.module=${iaf.module}))" if:true="${maven.projects.not.ok}"/>

		<condition property="stop.exe" value="../../stop.bat" else="/bin/bash"><os family="windows"/></condition>
		<condition property="stop.arg" value="../../stop.sh" else=""><os family="unix"/></condition>
		<condition property="start.exe" value="../../start.bat" else="/bin/bash"><os family="windows"/></condition>
		<condition property="start.arg" value="../../start.sh" else=""><os family="unix"/></condition>
		<condition property="mvn.exe" value="../frank-runner/mvn.bat" else="/bin/bash"><os family="windows"/></condition>
		<condition property="mvn.arg" value="../frank-runner/mvn.sh" else=""><os family="unix"/></condition>

		<echo message="ladybug: Build ladybug-echo2" if:true="${build.echo2}"/>
		<property name="build.echo2" value="false"/>
		<exec executable="${mvn.exe}" dir="../../../ladybug-echo2" vmlauncher="false" failonerror="true" if:true="${build.echo2}">
			<arg value="${mvn.arg}" unless:blank="${mvn.arg}"/>
			<arg value="clean" unless:true="${maven.skip.clean}"/>
			<arg value="install"/>
			<arg value="-DskipTests" if:true="${maven.skip.tests}"/>
			<arg value="-Dmaven.javadoc.skip=true" if:true="${maven.skip.javadoc}"/>
			<arg value="-Dmaven.compiler.useIncrementalCompilation=false" if:true="${maven.skip.recompile.all}"/><!-- prevent unnecessary "recompiling the module", when using an IDE the IDE will already give errors when files don't compile anymore because other files have changed (see also https://stackoverflow.com/questions/16963012/maven-compiler-recompile-all-files-instead-modified/49700942#49700942) -->
			<arg value="-Dmaven.source.skip=true" if:true="${maven.skip.source.jar}"/>
			<arg value="-X" if:true="${maven.verbose}"/>
			<arg value="--settings" if:set="maven.settings.xml"/>
			<arg value="${maven.settings.xml}" if:set="maven.settings.xml"/>
		</exec>

		<echo message="ladybug: Stop Tomcat to prevent JUnit tests failing because H2 database is locked"/>
		<exec executable="${stop.exe}" vmlauncher="false" failonerror="true">
			<arg value="${stop.arg}"/>
			<arg value="-Dproject.dir=frankframework/webapp"/>
			<arg value="-Dtomcat.skip.waitfor=${tomcat.skip.waitfor}"/>
		</exec>

		<echo message="ladybug: Build Ladybug"/>
		<exec executable="${mvn.exe}" dir="../../../ladybug" vmlauncher="false" failonerror="true">
			<env key="PATH" path="${java.library.path}:${git.path}" if:set="git.path" unless:true="${maven.skip.copyright}"/>
			<arg value="${mvn.arg}" unless:blank="${mvn.arg}"/>
			<arg value="clean" unless:true="${maven.skip.clean}"/>
			<arg value="install"/>
			<arg value="-DskipTests" if:true="${maven.skip.tests}"/>
			<arg value="-Dmaven.javadoc.skip=true" if:true="${maven.skip.javadoc}"/>
			<arg value="-Dmaven.compiler.useIncrementalCompilation=false" if:true="${maven.skip.recompile.all}"/><!-- prevent unnecessary "recompiling the module", when using an IDE the IDE will already give errors when files don't compile anymore because other files have changed (see also https://stackoverflow.com/questions/16963012/maven-compiler-recompile-all-files-instead-modified/49700942#49700942) -->
			<arg value="-Dmaven.source.skip=true" if:true="${maven.skip.source.jar}"/>
			<arg value="-Dmaven.skip.copyright=true" if:true="${maven.skip.copyright}"/>
			<arg value="-X" if:true="${maven.verbose}"/>
			<arg value="--settings" if:set="maven.settings.xml"/>
			<arg value="${maven.settings.xml}" if:set="maven.settings.xml"/>
		</exec>

		<echo message="ladybug: Test with ladybug-test-webapp" if:true="${test.with.test.webapp}"/>
		<exec executable="${start.exe}" vmlauncher="false" failonerror="true" if:true="${test.with.test.webapp}">
			<arg value="${start.arg}"/>
			<arg value="-Dproject.dir=ladybug-test-webapp"/>
			<arg value="-Dmaven=true"/>
			<arg value="-Dmaven.verbose=true" if:true="${maven.verbose}"/>
			<arg value="-Dwebapp.gitignore.skip=true"/>
			<arg value="-Dwebapp.clean=WEB-INF/classes/**\ WEB-INF/lib/**"/>
			<arg value="-Dspring.profiles.active=${spring.profiles.active}" if:set="spring.profiles.active"/>
			<arg value="-Dladybug.dir=ladybug"/>
			<arg value="-Dfrankflow.active=false"/>
		</exec>

		<echo message="ladybug: Test with ladybug-ff-test-webapp" if:true="${test.with.ff.test.webapp}"/>
		<exec executable="${start.exe}" vmlauncher="false" failonerror="true" if:true="${test.with.ff.test.webapp}">
			<arg value="${start.arg}"/>
			<arg value="-Dproject.dir=ladybug-ff-test-webapp"/>
			<arg value="-Dmaven=true"/>
			<arg value="-Dmaven.verbose=true" if:true="${maven.verbose}"/>
			<arg value="-Dwebapp.gitignore.skip=true"/>
			<arg value="-Dwebapp.clean=WEB-INF/classes/**\ WEB-INF/lib/**"/>
			<arg value="-Dspring.profiles.active=${spring.profiles.active}" if:set="spring.profiles.active"/>
			<arg value="-Dladybug.dir=ladybug"/>
			<arg value="-Dfrankflow.active=false"/>
		</exec>

		<echo message="ladybug: Test with iaf-${iaf.module}" if:true="${test.with.iaf}"/>
		<ant dir="../iaf-${iaf.module}" antfile="build.xml" inheritAll="false" if:true="${test.with.iaf}"/>
	</target>
</project>